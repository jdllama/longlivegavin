<!doctype html>
<html>
<head>
<meta charset="utf-8">
<title>Contra and Gradius have nothing on this!</title>
<% include ../../partials/angela.ejs %>
</head>
<body onload="initgame()">
<script>
//Konami Code...code....from https://stackoverflow.com/questions/31626852/how-to-add-konami-code-in-a-website-based-on-html

// a key map of allowed keys
var allowedKeys = {
  37: 'left',
  38: 'up',
  39: 'right',
  40: 'down',
  65: 'a',
  66: 'b'
};

// the 'official' Konami Code sequence
var konamiCode = ['up', 'up', 'down', 'down', 'left', 'right', 'left', 'right', 'b', 'a'];

// a variable to remember the 'position' the user has reached so far.
var konamiCodePosition = 0;

// add keydown event listener
document.addEventListener('keydown', function(e) {
  // get the value of the key code from the key map
  var key = allowedKeys[e.keyCode];
  // get the value of the required key from the konami code
  var requiredKey = konamiCode[konamiCodePosition];

  // compare the key with the required key
  if (key == requiredKey) {

    // move to the next key in the konami code sequence
    konamiCodePosition++;

    // if the last key is reached, activate cheats
    if (konamiCodePosition == konamiCode.length) {
      activateCheats();
      konamiCodePosition = 0;
    }
  } else {
    konamiCodePosition = 0;
  }
});

function activateCheats() {
  location.href = './SAVELAURAANDGAVINGODDAMMIT';
}

//Lights Out code from http://froxot.de/lights.php
var gamenumber=0;
var number_of_rows=25;//y
var number_of_columns=25;//x
var number_of_states=2;// first two states are 0 and 1 
var random_steps=0;
var game_initialisation=true;

var done_steps=0;
var aColors = new Array( number_of_states);
var aField = <%-arr;%>; //new Array( number_of_columns+1);
var copyright=2014
for (x = 0; x < number_of_columns+1; ++x) {
  	aField[x] = new Array( number_of_rows+1);
	for ( y = 0; y < number_of_rows+1; ++y) {
		aField[x][y] = 0;
	}
}


aColors[0]='black';
aColors[1]='yellow';



function onSelect(x,y) {
	done_steps++;
    /*
	flip (x-1,y-1);flip (x-1,y);flip (x-1,y+1);
	flip (x,y-1);flip (x,y);flip (x,y+1);
	flip (x+1,y-1);flip (x+1,y);flip (x+1,y+1);
    */
    flip(x,y);
    console.log(aField);
	if (solved()) {
        activateCheats();
    }//alert("Congratulation! You have solved the puzzle in "+done_steps+" steps.");
return;

}

function flip (fx,fy) {
	var fieldval=0;
	if (fx < 1 || fy < 1 || fx > number_of_columns || fy > number_of_rows ) { return; }
	fieldval=aField[fx][fy];
	fieldval++;
	if (fieldval > number_of_states-1) fieldval=0;
	aField[fx][fy]=fieldval;
	if (game_initialisation==false) { display (fx,fy); }
}

function display (dx,dy){
	fieldname="c"+dx+"r"+dy;
	fieldval=aField[dx][dy];
	document.getElementById(fieldname).style.background=aColors[fieldval];
}

function initgame() {
	var rx=0;
	var ry=0;

	game_initialisation=true;
/*	for (var x = 0; x < number_of_columns+1; ++x) {
 		for (var y = 0; y < number_of_rows+1; ++y) {
			aField[x][y] = 0;
		}
	}
    */
	for (n = 0; n < random_steps; ++n) {
		rx=randomise(number_of_columns);
		ry=randomise(number_of_rows);
		onSelect(rx,ry);
	}

	for (x = 1; x < number_of_columns+1; ++x) {
 		for ( y = 1; y < number_of_rows+1; ++y) {
			display (x,y);
		}
	}
	done_steps=0;
	game_initialisation=false;
}

function solved() {
	for (var x = 1; x < number_of_columns+1; ++x) {
 		for (var y = 1; y < number_of_rows+1; ++y) {
			if (aField[x][y] > 0) return false;
		}
	}
return true;
}

function randomise(maxim)
{
	tmp=Math.floor(Math.random()*maxim+1);
	return tmp;
}

</script>
<table border=1>
<script>
for (var y = 1; y < number_of_rows+1; ++y) {
	document.writeln("<tr>")
 	for (var x = 1; x < number_of_columns+1; ++x) {
		document.writeln("<td height=10 width=10 onclick='onSelect("+x+","+y+")'><div id=c"+x+"r"+y+" bgcolor='green'>&nbsp;</div></td>");
	}
	document.writeln("</tr>")
}
</script>
</body>
</html>